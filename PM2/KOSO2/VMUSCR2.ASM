; "VMUSCR2.ASM" 1990/01/04 R.H PC-9801UV11 make by R.H 1990
;
;	プレイヤー改行待ち用カーソル
;
;	カーソル明滅タイマ用にタイマ１を使用
;
; public subroutine.

INCLUDE	TSTSET.INC

CODE01	SEGMENT	PUBLIC	'CODE01'

	ASSUME	CS:CODE01,DS:DATA

PUBLIC	MSWWAT			; カーソルボタン待ち

EXTRN	MUSINI:NEAR		; マウスの初期化
EXTRN	MUSWRD:NEAR		; マウス読み込み・遅延処理付き
EXTRN	MUSSTP:NEAR		; マウスの終了

EXTRN	TMWAIT:NEAR		; time wait.
EXTRN	TMVSRT:NEAR		; V-SYNC timer start.
EXTRN	TMVEND:NEAR		; V-SYNC timer end.
EXTRN	TMVWAT:NEAR		; V-SYNC timer wait.
EXTRN	TMVSET:NEAR		; V-SYNC timer set.
EXTRN	TMVCHK:NEAR		; V-SYNC timer check.
EXTRN	TMVCLR:NEAR		; V-SYNC timer clear.
EXTRN	TMVSTP:NEAR		; V-SYNC timer stop.
EXTRN	TMVCNT:NEAR		; V-SYNC timer cont.

EXTRN	C1VV_BANK_CHG_ES:NEAR	; vram bank check & chenge.(WRITE) ES
EXTRN	C1VV_BANK_XCG_ES:NEAR	; vram bank check & chenge.(READ/WRITE) ES
EXTRN	C1VV_BANK_PLN_DS:NEAR	; vram bank check & chenge.(READ) DS

CUSLINE		EQU	12;14;32	; カーソルライン数
CUSLINE_SV	EQU	12;14;40	; エリア退避ライン数
MUSMAX_X	EQU	80-5	; マウス座標最大Ｘ
MUSMAX_Y	EQU	50-5	; マウス座標最大Ｙ
OFST_X		EQU	2	; マウス座標オフセットＸ
OFST_Y		EQU	2	; マウス座標オフセットＹ

WAIT_SET	EQU	20	; カーソル明滅タイマ


;	カーソルボタン待ち
;	-I- AX : カーソルＸ座標
;	    BX : カーソルＹ座標

MSWWAT	PROC	NEAR
	PUSH	AX
	PUSH	BX
	PUSH	CX
	PUSH	DX
	PUSH	SI
	PUSH	DI
	PUSH	BP
	PUSH	DS
	PUSH	ES

	MOV	CURX,AX
	MOV	CURY,BX

	CALL	MUSWRD		; マウス読み込み・遅延処理付き
	CMP	DH,0		; 左ボタン（1：ＯＦＦ／0：ＯＮ）
	JZ	MSWWAT8		;
	CMP	DL,0		; 右ボタン（1：ＯＦＦ／0：ＯＮ）
	JZ	MSWWAT8		;

	CALL	TMVCNT		; V-SYNC timer cont.

	CALL	VRAM_SAVE	; ＶＲＡＭ退避
	CALL	VRAM_PUT	; ＶＲＡＭカーソルＰＵＴ

	MOV	AX,WAIT_SET	; カーソル明滅タイマ
	CALL	TMVSET		; V-SYNC timer set.
MSWWAT1:			;
	CALL	TMVCHK		; V-SYNC timer check.
	CMP	AX,1		; 0=timer now, 1=timer end.
	JNE	MSWWAT3		;

	CMP	CURSW,0		; 0=カーソルＯＦＦ
	JE	MSWWAT1_ON	;

	MOV	CUSDAT_OFSET,OFFSET CUSDAT_OFF
	CALL	VRAM_PUT	; ＶＲＡＭカーソルＰＵＴ
;*;	CALL	VRAM_LOAD	; ＶＲＡＭ戻す
	MOV	CURSW,0		; 0=カーソルＯＦＦ
	JMP	MSWWAT2		;
MSWWAT1_ON:			;
	MOV	CUSDAT_OFSET,OFFSET CUSDAT_ON
	CALL	VRAM_PUT	; ＶＲＡＭカーソルＰＵＴ
	MOV	CURSW,1		; 1=カーソルＯＮ
MSWWAT2:			;
	MOV	AX,WAIT_SET	; カーソル明滅タイマ
	CALL	TMVSET		; V-SYNC timer set.
MSWWAT3:			;
	CALL	MUSWRD		; マウス読み込み・遅延処理付き
	CMP	DH,0		; 左ボタン（1：ＯＦＦ／0：ＯＮ）
	JZ	MSWWAT5		;
	CMP	DL,0		; 右ボタン（1：ＯＦＦ／0：ＯＮ）
	JZ	MSWWAT5		;
	JMP	MSWWAT1		;
MSWWAT5:			;
	CALL	VRAM_LOAD	; ＶＲＡＭ戻す
MSWWAT8:			;
	POP	ES
	POP	DS
	POP	BP
	POP	DI
	POP	SI
	POP	DX
	POP	CX
	POP	BX
	POP	AX
	RET
MSWWAT	ENDP


;	ＶＲＡＭ退避

VRAM_SAVE	PROC	NEAR
	PUSH	DS

	MOV	AX,CURY			; カーソルＹ
	MUL	SSCURW			; * visual data plean width.
	ADD	AX,CURX			; + カーソルＸ
	MOV	BX,AX			; BX =

	MOV	SI,BX			; 先頭オフセット

	MOV	DI,OFFSET VRMSAV0	; ＶＲＡＭ退避エリア

	MOV	BP,SSCURW		; BP=visual data plean width.
	SUB	BP,4			; add width.

	MOVX	ES,DS			; データセグメント

	MOV	DX,DS

	MOVX	DS,SSCUR0		; visual data segment plean 0
	CALL	C1VV_BANK_PLN_DS	; vram bank check & chenge.(READ) DS
	MOV	CX,CUSLINE_SV		; エリア退避ライン数
VRAM_SAVE2:
	MOVSW				;
	MOVSW				;
	ADD	SI,BP			; add width.
	LOOP	VRAM_SAVE2

	MOV	SI,BX			; 先頭オフセット

	MOV	DS,DX			;

	MOVX	DS,SSCUR1		; visual data segment plean 1
	CALL	C1VV_BANK_PLN_DS	; vram bank check & chenge.(READ) DS
	MOV	CX,CUSLINE_SV		; エリア退避ライン数
VRAM_SAVE3:
	MOVSW				;
	MOVSW				;
	ADD	SI,BP			; add width.
	LOOP	VRAM_SAVE3

	MOV	SI,BX			; 先頭オフセット

	MOV	DS,DX			;

	MOVX	DS,SSCUR2		; visual data segment plean 2
	CALL	C1VV_BANK_PLN_DS	; vram bank check & chenge.(READ) DS
	MOV	CX,CUSLINE_SV		; エリア退避ライン数
VRAM_SAVE4:
	MOVSW				;
	MOVSW				;
	ADD	SI,BP			; add width.
	LOOP	VRAM_SAVE4

	MOV	SI,BX			; 先頭オフセット

	MOV	DS,DX			;

	MOVX	DS,SSCUR3		; visual data segment plean 3
	CALL	C1VV_BANK_PLN_DS	; vram bank check & chenge.(READ) DS
	MOV	CX,CUSLINE_SV		; エリア退避ライン数
VRAM_SAVE5:
	MOVSW				;
	MOVSW				;
	ADD	SI,BP			; add width.
	LOOP	VRAM_SAVE5

	POP	DS
	RET
VRAM_SAVE	ENDP



;	ＶＲＡＭ戻す

VRAM_LOAD	PROC	NEAR
	MOV	AX,CURY			; カーソルＹ
	MUL	SSCURW			; * visual data plean width.
	ADD	AX,CURX			; + カーソルＸ
	MOV	BX,AX			; BX =

	MOV	SI,OFFSET VRMSAV0	; ＶＲＡＭ退避エリア

	MOV	DI,BX			; 先頭オフセット

	MOV	BP,SSCURW		; BP=visual data plean width.
	SUB	BP,4			; add width.

	MOV	ES,SSCUR0		; visual data segment plean 0
	CALL	C1VV_BANK_CHG_ES	; vram bank check & chenge.(WRITE) ES
	MOV	CX,CUSLINE_SV		; エリア退避ライン数
VRAM_LOAD2:
	MOVSW				;
	MOVSW				;
	ADD	DI,BP			; add width.
	LOOP	VRAM_LOAD2

	MOV	DI,BX			; 先頭オフセット

	MOV	ES,SSCUR1		; visual data segment plean 1
	CALL	C1VV_BANK_CHG_ES	; vram bank check & chenge.(WRITE) ES
	MOV	CX,CUSLINE_SV		; エリア退避ライン数
VRAM_LOAD3:
	MOVSW				;
	MOVSW				;
	ADD	DI,BP			; add width.
	LOOP	VRAM_LOAD3

	MOV	DI,BX			; 先頭オフセット

	MOV	ES,SSCUR2		; visual data segment plean 2
	CALL	C1VV_BANK_CHG_ES	; vram bank check & chenge.(WRITE) ES
	MOV	CX,CUSLINE_SV		; エリア退避ライン数
VRAM_LOAD4:
	MOVSW				;
	MOVSW				;
	ADD	DI,BP			; add width.
	LOOP	VRAM_LOAD4

	MOV	DI,BX			; 先頭オフセット

	MOV	ES,SSCUR3		; visual data segment plean 3
	CALL	C1VV_BANK_CHG_ES	; vram bank check & chenge.(WRITE) ES
	MOV	CX,CUSLINE_SV		; エリア退避ライン数
VRAM_LOAD5:
	MOVSW				;
	MOVSW				;
	ADD	DI,BP			; add width.
	LOOP	VRAM_LOAD5

	RET
VRAM_LOAD	ENDP


;	ＶＲＡＭカーソルＰＵＴ
;	-I- CUSDAT_OFSET : カーソルデータ・オフセット

VRAM_PUT	PROC	NEAR
	MOV	AX,CURY			; カーソルＹ
	MUL	SSCURW			; * visual data plean width.
	ADD	AX,CURX			; + カーソルＸ
	MOV	BX,AX			; BX =

	MOV	BP,SSCURW		; BP=visual data plean width.
	SUB	BP,4			; add width.

	MOV	SI,CUSDAT_OFSET		; カーソルデータ・オフセット
	ADD	SI,4*4*32		; カーソルマスク
	MOV	DI,BX			; 先頭オフセット

	MOV	SI,CUSDAT_OFSET		; カーソルデータ・オフセット
	ADD	SI,4*4*32		; カーソルマスク
	MOV	DI,BX			; 先頭オフセット

	MOV	ES,SSCUR0		; visual data segment plean 0
	CALL	C1VV_BANK_XCG_ES	; vram bank check & chenge.(R/W) ES
	MOV	CX,CUSLINE		; カーソルライン数
VRAM_PUT2:
	LODSW
	AND	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	LODSW
	AND	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	ADD	DI,BP			; add width.
	LOOP	VRAM_PUT2


	MOV	SI,CUSDAT_OFSET		; カーソルデータ・オフセット
	MOV	DI,BX			; 先頭オフセット
	MOV	CX,CUSLINE		; カーソルライン数
VRAM_PUT22:
	LODSW
	OR	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	LODSW
	OR	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	ADD	DI,BP			; add width.
	LOOP	VRAM_PUT22


	MOV	SI,CUSDAT_OFSET		; カーソルデータ・オフセット
	ADD	SI,4*4*32		; カーソルマスク
	MOV	DI,BX			; 先頭オフセット
	MOV	ES,SSCUR1		; visual data segment plean 1
	CALL	C1VV_BANK_XCG_ES	; vram bank check & chenge.(R/W) ES
	MOV	CX,CUSLINE		; カーソルライン数
VRAM_PUT3:
	LODSW
	AND	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	LODSW
	AND	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	ADD	DI,BP			; add width.
	LOOP	VRAM_PUT3


	MOV	SI,CUSDAT_OFSET		; カーソルデータ・オフセット
	ADD	SI,1*4*32		; カーソル
	MOV	DI,BX			; 先頭オフセット
	MOV	CX,CUSLINE		; カーソルライン数
VRAM_PUT33:
	LODSW
	OR	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	LODSW
	OR	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	ADD	DI,BP			; add width.
	LOOP	VRAM_PUT33


	MOV	SI,CUSDAT_OFSET		; カーソルデータ・オフセット
	ADD	SI,4*4*32		; カーソルマスク
	MOV	DI,BX			; 先頭オフセット
	MOV	ES,SSCUR2		; visual data segment plean 2
	CALL	C1VV_BANK_XCG_ES	; vram bank check & chenge.(R/W) ES
	MOV	CX,CUSLINE		; カーソルライン数
VRAM_PUT4:
	LODSW
	AND	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	LODSW
	AND	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	ADD	DI,BP			; add width.
	LOOP	VRAM_PUT4


	MOV	SI,CUSDAT_OFSET		; カーソルデータ・オフセット
	ADD	SI,2*4*32		; カーソル
	MOV	DI,BX			; 先頭オフセット
	MOV	CX,CUSLINE		; カーソルライン数
VRAM_PUT44:
	LODSW
	OR	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	LODSW
	OR	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	ADD	DI,BP			; add width.
	LOOP	VRAM_PUT44


	MOV	SI,CUSDAT_OFSET		; カーソルデータ・オフセット
	ADD	SI,4*4*32		; カーソルマスク
	MOV	DI,BX			; 先頭オフセット
	MOV	ES,SSCUR3		; visual data segment plean 3
	CALL	C1VV_BANK_XCG_ES	; vram bank check & chenge.(R/W) ES
	MOV	CX,CUSLINE		; カーソルライン数
VRAM_PUT5:
	LODSW
	AND	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	LODSW
	AND	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	ADD	DI,BP			; add width.
	LOOP	VRAM_PUT5


	MOV	SI,CUSDAT_OFSET		; カーソルデータ・オフセット
	ADD	SI,3*4*32		; カーソル
	MOV	DI,BX			; 先頭オフセット
	MOV	CX,CUSLINE		; カーソルライン数
VRAM_PUT55:
	LODSW
	OR	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	LODSW
	OR	WORD PTR ES:[DI],AX
	INC	DI
	INC	DI
	ADD	DI,BP			; add width.
	LOOP	VRAM_PUT55

	RET
VRAM_PUT	ENDP

CODE01	ENDS


DATA	SEGMENT	PUBLIC	'DATA'

EXTRN	SSCUR0:WORD		; visual data segment plean 0
EXTRN	SSCUR1:WORD		; visual data segment plean 1
EXTRN	SSCUR2:WORD		; visual data segment plean 2
EXTRN	SSCUR3:WORD		; visual data segment plean 3
EXTRN	SSCURW:WORD		; visual data plean width.

CUSDAT_OFSET	DW	CUSDAT_OFF	; カーソルデータ・オフセット
CUSDAT_OFF	LABEL	WORD
IF 1
		DB	000H,08fH,0fcH,000H,000H,008H,000H,08cH
		DB	000H,004H,000H,058H,000H,000H,040H,030H
		DB	000H,000H,008H,060H,000H,000H,038H,0c0H
		DB	000H,000H,031H,080H,000H,000H,003H,000H
		DB	000H,000H,006H,000H,000H,000H,008H,000H
		DB	000H,000H,010H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,0f3H,0f3H,0fcH,000H,03bH,0ffH,0b0H
		DB	000H,017H,087H,060H,000H,00fH,043H,0c0H
		DB	000H,007H,00bH,080H,000H,003H,03bH,000H
		DB	000H,001H,032H,000H,000H,000H,084H,000H
		DB	000H,000H,078H,000H,000H,000H,034H,000H
		DB	000H,000H,008H,000H,000H,000H,010H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,083H,0f0H,000H,000H,0fbH,0ffH,0bcH
		DB	000H,077H,087H,078H,000H,03fH,043H,0f0H
		DB	000H,01fH,00bH,0e0H,000H,00fH,03bH,0c0H
		DB	000H,007H,033H,080H,000H,003H,087H,000H
		DB	000H,001H,0feH,000H,000H,000H,0fcH,000H
		DB	000H,000H,078H,000H,000H,000H,030H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,083H,0f0H,000H,000H,008H,000H,080H
		DB	000H,000H,000H,000H,000H,000H,060H,000H
		DB	000H,000H,040H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	0ffH,000H,000H,003H,0ffH,000H,000H,003H
		DB	0ffH,080H,000H,007H,0ffH,0c0H,000H,00fH
		DB	0ffH,0e0H,000H,01fH,0ffH,0f0H,000H,03fH
		DB	0ffH,0f8H,000H,07fH,0ffH,0fcH,000H,0ffH
		DB	0ffH,0feH,001H,0ffH,0ffH,0ffH,003H,0ffH
		DB	0ffH,0ffH,087H,0ffH,0ffH,0ffH,0cfH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
ENDIF

CUSDAT_ON	LABEL	WORD
		DB	000H,08fH,0fcH,000H,000H,008H,000H,08cH
		DB	000H,004H,030H,058H,000H,000H,030H,030H
		DB	000H,000H,0fcH,060H,000H,000H,0fcH,0c0H
		DB	000H,000H,031H,080H,000H,000H,033H,000H
		DB	000H,000H,006H,000H,000H,000H,008H,000H
		DB	000H,000H,010H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,0f3H,0f3H,0fcH,000H,03bH,0ffH,0b0H
		DB	000H,017H,0ffH,060H,000H,00fH,0ffH,0c0H
		DB	000H,007H,0ffH,080H,000H,003H,0ffH,000H
		DB	000H,001H,0feH,000H,000H,000H,0fcH,000H
		DB	000H,000H,078H,000H,000H,000H,034H,000H
		DB	000H,000H,008H,000H,000H,000H,010H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,083H,0f0H,000H,000H,0fbH,0ffH,0bcH
		DB	000H,077H,087H,078H,000H,03fH,033H,0f0H
		DB	000H,01fH,07bH,0e0H,000H,00fH,07bH,0c0H
		DB	000H,007H,033H,080H,000H,003H,087H,000H
		DB	000H,001H,0feH,000H,000H,000H,0fcH,000H
		DB	000H,000H,078H,000H,000H,000H,030H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,083H,0f0H,000H,000H,008H,000H,080H
		DB	000H,000H,048H,000H,000H,000H,0b4H,000H
		DB	000H,000H,078H,000H,000H,000H,078H,000H
		DB	000H,000H,0b4H,000H,000H,000H,048H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	000H,000H,000H,000H,000H,000H,000H,000H
		DB	0ffH,000H,000H,003H,0ffH,000H,000H,003H
		DB	0ffH,080H,000H,007H,0ffH,0c0H,000H,00fH
		DB	0ffH,0e0H,000H,01fH,0ffH,0f0H,000H,03fH
		DB	0ffH,0f8H,000H,07fH,0ffH,0fcH,000H,0ffH
		DB	0ffH,0feH,001H,0ffH,0ffH,0ffH,003H,0ffH
		DB	0ffH,0ffH,087H,0ffH,0ffH,0ffH,0cfH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH
		DB	0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH,0ffH




VRMSAV0 DB	40*5 DUP (?)		; ＶＲＡＭ退避エリア
VRMSAV1	DB	40*5 DUP (?)		;
VRMSAV2	DB	40*5 DUP (?)		;
VRMSAV3	DB	40*5 DUP (?)		;

CURX	DW	0			; カーソルＸ
CURY	DW	0			; カーソルＹ

CURNEWX	DW	0			; カーソル新しいＸ
CURNEWY	DW	0			; カーソル新しいＹ

CURSW	DW	0			; 0=カーソルＯＦＦ,1=カーソルＯＮ

DATA	ENDS

	END
;
;	end of "VMUSCR2.ASM"
;
