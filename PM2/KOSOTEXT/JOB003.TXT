; "JOB003.TXT"

.S_STARTDAY		; スケジュール開始日
.S_ENDDAY		; スケジュール終了日

.GG_MAX
.GG_STR[6]
.GG_VAL[6]
.GG_GOLD_HDL

.DAY_COUNTER	=0	; 日付カウンタ
.NOW_COUNT		=0	; 実行回数

.FLAG_UP		=0	; 待遇アップフラグ
.GUARA_BASE		=0	; 基本給
.GUARA_ONE		=0	; バイト料
.GUARA_ALL		=0	; バイト料合計
.WORK_DAYS		=0	; 仕事日数
.SUCCESS_DAYS	=0	; 成功日数
.SUCCESS_LINE	=0	; 成功基準値
.SUCCESS_FLAG	=0	; 成功フラグ

.FLAG_ALLOPEN=0

.A_TEXT_HDL=6		;アニメ中テキストハンドル

.SLCANM
.TIMELOP
.TIMELOPMAX
.TIMEWAIT1
.GIRX
.GIRY
.ALOCX[13]
.ALOCY[13]
.ALOCC[13]
.ALOCF[13]
.ALOCCNT[13]
.AFWORK=0
.AFWORKCNT=0
.AFMISS=0
.AFMISSCNT=0
.TITLES="農場"

ANIME_INIT

S_STARTDAY	= SCH_STARTDAY[SCH_NOW]		; スケジュール開始日
S_ENDDAY	= SCH_ENDDAY[SCH_NOW]		; スケジュール終了日

SCH_NOW++		; スケジュール実行中項目

R_FARM			; 3=農場

LOAD("RUNNING")

;***************************************
;
;		農場
;
;***************************************

*R_FARM			; 3=農場

TXOPEN(1)
TXA(NAME_FIRST)は今日から，
郊外の農場で農作業のアルバイトです．
@P
TXCLOSE(1)

TXOPEN(2)
TXFACE("F063")

GUARA_BASE	=10						; 基本給
GUARA_ALL	=0						; バイト料合計
WORK_DAYS	=0						; 仕事日数
SUCCESS_DAYS=0						; 成功日数

CK_GUARA(RUN_ARBEIT[4],GUARA_BASE)	; バイト料
FLAG_UP		= AX					; 待遇アップ
GUARA_ONE	= DX					; バイト料

地主ボンゴレ

IF ( S_HIKOUKA >= 60 )
	「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊」
	@P
	TXCLOSE(2)	
	TXOPEN(1)
	TXA(NAME_FIRST)はアルバイトを断られてしまった・・・
	@P
	TXCLOSE(1)

	DAY_COUNTER	= S_ENDDAY - S_STARTDAY 	; 日付カウンタ
		TIMER1(10)
		WAIT1
		CLENDER(3)					; カレンダー・更新処理
		CLENDER(2)					; カレンダー・再表示
	LOOP DAY_COUNTER
	RET

RUN_ARBEIT[20]++	;「農場」訪問回数

IF ( GRA_ARBEIT[4] = FLAG_UP )		;「農場」待遇

	IF ( RUN_ARBEIT[20]=1 )		;１回目
		「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊」

	IF ( RUN_ARBEIT[20]>1 )		;２回目以降
		「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊」

IF ( GRA_ARBEIT[4] ! FLAG_UP )	;「農場」待遇

	GRA_ARBEIT[4] = FLAG_UP		;「農場」待遇

	IF ( FLAG_UP = 1 )			; 待遇アップ１回目
		「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊TXGOLD(GUARA_ONE)＊＊」

	IF ( FLAG_UP ! 1 )			; 待遇アップ２回目以降
		「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊TXGOLD(GUARA_ONE)＊」
@P
TXCLOSE(2)

ALL_OPEN
DAY_COUNTER	= S_ENDDAY - S_STARTDAY + 1	; 日付カウンタ

	TXF(11)

	IF ( VAL_WEEK!0 )					; Sunday

		B_TAIRYOKU++					; 体力
		B_KINRYOKU++					; 筋力
		B_KIHIN--						; 気品
		IF ( B_KIHIN < 0 ) B_KIHIN=0	; 気品
		B_STRESS += 3					; ストレス

		WORK_DAYS++						; 仕事日数
		TXCLR TXA(TITLES)・TXPOINT(WORK_DAYS)日目

		IRAND999X(B_STRESS)				; ストレス
		SUCCESS_LINE= B_TAIRYOKU - IRND	; 体力

		CHK_RENAI
		CHK_HIKOUKA

		IF ( SUCCESS_LINE >= 30 )		; 体力３０ 成功
			今日はしっかり働いた．
			SUCCESS_DAYS++				; 成功日数
			GUARA_ALL += GUARA_ONE		; バイト料合計
			GXXDGOLD
			SUCCESS_FLAG = 1			; 成功フラグ
			ANIME_WIDW					;

		IF ( SUCCESS_LINE < 30 )		; 体力３０ 失敗
			IF ( S_HIKOUKA < 10 )
				今日は農場で失敗をしたようだ・・・
			IF ( S_HIKOUKA >= 10 )
				TXA(NAME_FIRST)は仕事をサボっている・・・
			SUCCESS_FLAG = 0			; 成功フラグ
			ANIME_WIDW					;

		GXXD(0,B_TAIRYOKU)		; 体力
		GXXD(1,B_KINRYOKU)		; 筋力
		GXXD(2,B_KIHIN)			; 気品
		GXXD(3,B_STRESS)		; ストレス

	IF ( VAL_WEEK=0 )				; Sunday
		@C
		今日は日曜日です．
		ANMTSUNDAY

	TXF(10)

	BORTH_CHECK

	IF ( DAY_COUNTER ! 1 )
		CLENDER(3)						; カレンダー・更新処理
		CLENDER(2)						; カレンダー・再表示
LOOP DAY_COUNTER
ALL_CLOSE

RUN_ARBEIT[0]++					;「娘を働かせる」実行回数
IF ( SUCCESS_DAYS>0 )			; 成功日数
	RUN_ARBEIT[4]++					;「農場」実行回数

TXOPEN(2)
TXFACE("F063")

IF ( SUCCESS_DAYS = WORK_DAYS )		; バイト終了時（パーフェクト）
	P1X100(GUARA_ALL,50)
	GUARA_ALL += AX
	「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊TXPOINT(SUCCESS_DAYS)＊＊TXGOLD(GUARA_ALL)＊＊」
	GOLDADD(GUARA_ALL)			; バイト料合計

IF ( SUCCESS_DAYS < WORK_DAYS   SUCCESS_DAYS > 0 );（失敗があった場合）
	「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊TXPOINT(SUCCESS_DAYS)＊＊＊TXGOLD(GUARA_ALL)＊＊」
	GOLDADD(GUARA_ALL)			; バイト料合計

IF ( SUCCESS_DAYS = 0 )					; バイト終了時（全滅）
	「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊」
WWPROF(3)					; ﾌﾟﾛﾌｨｰﾙ･ｳｲﾝﾄﾞｳ・所持金
@P
TXCLOSE(2)

RET

*ALL_OPEN
ANIME_OPEN
STRSCLEAR
GG_STR[0]="体力"
GG_VAL[0]=B_TAIRYOKU
GG_STR[1]="筋力"
GG_VAL[1]=B_KINRYOKU
GG_STR[2]="気品"
GG_VAL[2]=B_KIHIN
GG_STR[3]="ストレス"
GG_VAL[3]=B_STRESS
GG_MAX=4
GXXSTART
FLAG_ALLOPEN=1
RET

*ALL_CLOSE
IF ( FLAG_ALLOPEN=1 )
	FLAG_ALLOPEN=0
	GR_CLOSE						; ﾊﾟﾗﾒｰﾀ･ｳｲﾝﾄﾞｳ CLOSE
	ANIME_CLOSE
RET

; ******************
;	lib.
; ******************

*GXXSTART
GR_F(1,16)			; ﾊﾟﾗﾒｰﾀ･ｳｲﾝﾄﾞｳ OPEN  #16	13,000byte
C3 = 0
C2 = 0
IGRP_X=4
IGRP_Y=340
IGRP_CNT=0
C1 = GG_MAX
	IGRP_TBL1[IGRP_CNT]=GG_STR[C2]
	IGRP_TBL3[IGRP_CNT]=GG_VAL[C2]
	IGRP_CNT++ C2++
	IF ( IGRP_CNT = 2 )
		C3++ GRPOPEN(1,C3)		; ﾊﾟﾗﾒｰﾀ･ｳｲﾝﾄﾞｳ
		IGRP_CNT = 0
		IGRP_X += 24
LOOP C1
IF ( IGRP_CNT ! 0 )
	C3++ GRPOPEN(1,C3)		; ﾊﾟﾗﾒｰﾀ･ｳｲﾝﾄﾞｳ
IGRP_TBL1[0]="もうけ"
IGRP_TBL3[0]=0
IGRP_CNT=1
IGRP_X=4
IGRP_Y=140
C3++ GOLDOPEN(1,C3)			; ﾊﾟﾗﾒｰﾀ 所持金ｳｲﾝﾄﾞｳ
GG_GOLD_HDL=C3
RET

*GXXD
C3 = AX
C4 = BX
MOD( C3, 2 )	C5 = AX		; 余り
C6 = C3 / 2 + 1				; handle.
GRPUPD(C6,C5,C4)			;
RET

*GXXDGOLD
GOLDUPD(GG_GOLD_HDL,0,GUARA_ALL)
RET

; ******************
;	Txxx
; ******************

*ANIME_INIT
TIMEWAIT1=8		;8;6
TIMELOPMAX=5	;5;12

;仕事中１
ALOCX[0]	=72/8
ALOCY[0]	=114-79
ALOCC[0]	=0
ALOCCNT[0]	=6
.FILM0[6]=2,1,2,3,4,5
;仕事中２
ALOCX[1]	=200/8
ALOCY[1]	=114-79
ALOCC[1]	=0
ALOCCNT[1]	=8
.FILM1[8]=11,11,12,12,13,12,13,12
;仕事ミス・病気１
ALOCX[2]	=72/8
ALOCY[2]	=114-79
ALOCC[2]	=0
ALOCCNT[2]	=10
.FILM2[10]=6,7,8,9,10,9,10,9,10,9
;仕事ミス・病気２
ALOCX[3]	=200/8
ALOCY[3]	=114-79
ALOCC[3]	=0
ALOCCNT[3]	=10
.FILM3[10]=13,14,15,16,17,18,19, 18,19,18
;サボリ
ALOCX[4]	=280/8
ALOCY[4]	=114-79
ALOCC[4]	=0
ALOCCNT[4]	=2
.FILM4[2]=31,32

;馬上半身（仕事２と連動）
ALOCX[5]	=240/8
ALOCY[5]	=114-79
ALOCC[5]	=0
ALOCCNT[5]	=8
.FILM5[8]=20,21,22,23,24, 23,24,23

;馬上半身（仕事ミス２と連動）
ALOCX[6]	=240/8
ALOCY[6]	=114-79
ALOCC[6]	=0
ALOCCNT[6]	=10
.FILM6[10]=22,25, 26,26,26, 26,26,26, 26,26

;馬下半身
ALOCX[7]	=280/8
ALOCY[7]	=114-79
ALOCC[7]	=0
ALOCCNT[7]	=13
.FILM7[13]=27,27,27, 27,28,29,30, 27,27,27, 27,27,27

;オヤジ
ALOCX[8]	=0/8
ALOCY[8]	=114-79
ALOCC[8]	=0
ALOCCNT[8]	=11
.FILM8[11]=34,34,34, 33,34, 33,34, 33,34, 33,34

;アヒル（仕事１）
ALOCX[9]	=136/8		;<=====
ALOCY[9]	=114-79
ALOCC[9]	=0
ALOCCNT[9]	=4
.FILM9[4]=39,40,41,42

;アヒル（仕事２）
ALOCX[10]	=136/8
ALOCY[10]	=114-79
ALOCC[10]	=0
ALOCCNT[10]	=4
.FILM10[4]=35,36,37,38

;風車（大）
ALOCX[11]	=64/8
ALOCY[11]	=113-79
ALOCC[11]	=0
ALOCCNT[11]	=4
.FILM11[4]=43,44,45,46

;風車（小）
ALOCX[12]	=112/8
ALOCY[12]	=113-79
ALOCC[12]	=0
ALOCCNT[12]	=4
.FILM12[4]=47,48,49,50

RET

*ANIME_OPEN
WWANIME(1,0)			; anime window open.
WWANIME(3,0,"J004B")	; pictuer load.
WWANIME(6,0,"J004A")	; anime pattern add load.
WWANIME(4,0)			; put BG.
WWANIME(5,0)			; pictuer copy vvram -> CRT.
TXOPEN(A_TEXT_HDL)
RET

*ANIME_CLOSE
WWANIME(2,0)		: anime window close.
TXCLOSE(A_TEXT_HDL)
RET

*ANIME_WIDW
IF ( AFMISSCNT = 0 )
	RANDAM(2)
	AFMISS = IRND - 1
	ALOCC[2] = 0
	ALOCC[3] = 0
	AFMISSCNT = 2
	IF ( SLCANM = 0 )( SLCANM = 1 )
		AFMISS = AFWORK
IF ( AFWORKCNT = 0 )
	RANDAM(2)
	AFWORK = IRND - 1
	RANDAM(2)
	AFWORKCNT = IRND + 1
AFWORKCNT--
IF ( SUCCESS_FLAG ! 0 )			; 成功フラグ
	AFMISSCNT = 0
	IF ( AFWORK=0 ) ANMT001(0)	; 0=仕事中１,1=仕事中２
	IF ( AFWORK=1 ) ANMT001(1)	; 0=仕事中１,1=仕事中２
	GOTO ANIME_WIDW_SHOW
IF ( S_HIKOUKA >= 10 )		; 失敗時（非行化指数１０以上）
	ANMT001(4)				; 4=サボリ
	GOTO ANIME_WIDW_SHOW
AFMISSCNT--
IF ( AFMISS=0 ) ANMT001(2)	; 2=仕事ミス１,3=仕事ミス２
IF ( AFMISS=1 ) ANMT001(3)	; 2=仕事ミス１,3=仕事ミス２
*ANIME_WIDW_SHOW
RET


*ANMT001
; AX :	0=仕事中１,1=仕事中２,2=仕事ミス１,3=仕事ミス２,4=サボリ
SLCANM = AX

TIMELOP=TIMELOPMAX
	WWANIME(4,0)		; put BG.
	TIMER1(TIMEWAIT1)

	ANIM_NUM(11)	APUT(ALOCX[11],ALOCY[11],DX)		;風車
	ANIM_NUM(12)	APUT(ALOCX[12],ALOCY[12],DX)		;
	ALOCC[11]++
	ALOCC[12]++

	IF ( SLCANM = 1 )	;1=仕事中２
		ANIM_NUM(5)			APUT(ALOCX[5],ALOCY[5],DX)
		ANIM_NUM(7)			APUT(ALOCX[7],ALOCY[7],DX)
		ALOCC[5]++
		ALOCC[7]++

	IF ( SLCANM = 3 )	;3=仕事ミス２
		ANIM_NUM(6)			APUT(ALOCX[6],ALOCY[6],DX)
		ANIM_NUM(7)			APUT(ALOCX[7],ALOCY[7],DX)
		ALOCC[6]++
		ALOCC[7]++

	ANIM_NUM(8)	APUT(ALOCX[8],ALOCY[8],DX)		; オヤジ
	ALOCC[8]++

	ANIM_NUM(SLCANM)
	IF ( SLCANM = 0 )	;0=仕事中１
		IF ( DX = 3 )
			ALOCX[0]	=80/8
		IF ( DX >= 4 )
			ALOCX[0]	=88/8
		IF ( DX <= 2 )
			ALOCX[0]	=72/8
	APUT(ALOCX[SLCANM],ALOCY[SLCANM],DX)
	ALOCC[SLCANM]++

	;アヒル

	IF ( SLCANM = 0 )( SLCANM = 2 )	;0=仕事中１
		ANIM_NUM(9)		APUT(ALOCX[9],ALOCY[9],DX)
		ALOCC[9]++
	IF ( SLCANM = 1 )( SLCANM = 3 )	;1=仕事中２
		ANIM_NUM(10)	APUT(ALOCX[10],ALOCY[10],DX)
		ALOCC[10]++

	WAIT1
	WWANIME(5,0)		; pictuer copy vvram -> CRT.
LOOP TIMELOP
RET

*ANMTSUNDAY
TIMELOP=TIMELOPMAX
	WWANIME(4,0)		; put BG.
	TIMER1(TIMEWAIT1)
	ANIM_NUM(11)	APUT(ALOCX[11],ALOCY[11],DX)		;風車
	ANIM_NUM(12)	APUT(ALOCX[12],ALOCY[12],DX)		;
	ALOCC[11]++
	ALOCC[12]++
	WAIT1
	WWANIME(5,0)		; pictuer copy vvram -> CRT.
LOOP TIMELOP
RET

*ANIM_NUM
;ANIM_NUM(filmnumber)
;-O- DX pattern number.
IF ( ALOCC[AX] >= ALOCCNT[AX] )
	ALOCC[AX] = 0
BX = ALOCC[AX]
IF (AX=0) DX=FILM0[BX]
IF (AX=1) DX=FILM1[BX]
IF (AX=2) DX=FILM2[BX]
IF (AX=3) DX=FILM3[BX]
IF (AX=4) DX=FILM4[BX]
IF (AX=5) DX=FILM5[BX]
IF (AX=6) DX=FILM6[BX]
IF (AX=7) DX=FILM7[BX]
IF (AX=8) DX=FILM8[BX]
IF (AX=9) DX=FILM9[BX]
IF (AX=10) DX=FILM10[BX]
IF (AX=11) DX=FILM11[BX]
IF (AX=12) DX=FILM12[BX]
DX--	; DX pattern number.
RET

*APUT
; anime pattern put vvram.
; APUT(x,y,pattern)
GIRX=AX
GIRY=BX
SI = CX * 2 + 1
DX = BX
CX = AX
AX = 7
BX = 0
;	WWANIME(7,0,ALOCX[0],ALOCY[0],ALOCC[0])
WWANIME	; anime pattern put vvram.
RET


;************************************
;	誕生日チェック
;************************************

*BORTH_CHECK

IF ( P_BORTHMONTH = VAL_MONTH  P_BORTHDAY = VAL_DAY )			; 娘の誕生日
	IF ( P_BORTHMONTH[1] = VAL_MONTH  P_BORTHDAY[1] = VAL_DAY )	; 父の誕生日
		E_ETC[14]=P_NENREI[1]			;「父の誕生日」をチェックした年齢
		IF ( URA_FATHER >=60 )			;父との関係値が６０以上
			ALL_CLOSE
			EVE4243						;娘の誕生日と父の誕生日の合体
			IF ( DAY_COUNTER ! 1 )
				ALL_OPEN
			RET

IF ( P_BORTHMONTH = VAL_MONTH )			; 誕生月
	IF ( P_BORTHDAY = VAL_DAY )			; 誕生日
		ALL_CLOSE
		EVENT042						; 42 娘の誕生日
		IF ( DAY_COUNTER ! 1 )
			ALL_OPEN
		RET

IF ( P_BORTHMONTH[1] = VAL_MONTH )		; 父の誕生月
	IF ( P_BORTHDAY[1] = VAL_DAY )		; 父の誕生日
		E_ETC[14]=P_NENREI[1]			;「父の誕生日」をチェックした年齢
		IF ( URA_FATHER >=60 )			;父との関係値が６０以上
			ALL_CLOSE
			EVENT043					; 43 父の誕生日
			IF ( DAY_COUNTER ! 1 )
				ALL_OPEN
			RET
RET

*CHK_RENAI
IF ( FLAG_RENAI!0 )		;状態・恋愛
	RANDAM(100)			;２０％の確率
	IF ( IRND<=20 )
		SUCCESS_LINE=0
RET

*CHK_HIKOUKA
IF ( S_HIKOUKA >= 10 S_HIKOUKA < 30 )	;状態・やや反抗的
	RANDAM(100)							;４０％の確率
	IF ( IRND<=40 )
		SUCCESS_LINE=0
	RET

IF ( S_HIKOUKA >= 30 )			;状態・反抗的
	RANDAM(100)					;８０％の確率
	IF ( IRND<=80 )
		SUCCESS_LINE=0
	RET
RET
;
;	end of "JOB003.TXT"
;
