; "JOB014.TXT"

.S_STARTDAY		; スケジュール開始日
.S_ENDDAY		; スケジュール終了日

.GG_MAX
.GG_STR[6]
.GG_VAL[6]
.GG_GOLD_HDL

.DAY_COUNTER	=0	; 日付カウンタ
.NOW_COUNT		=0	; 実行回数

.FLAG_UP		=0	; 待遇アップフラグ
.GUARA_BASE		=0	; 基本給
.GUARA_ONE		=0	; バイト料
.GUARA_ALL		=0	; バイト料合計
.WORK_DAYS		=0	; 仕事日数
.SUCCESS_DAYS	=0	; 成功日数
.SUCCESS_LINE	=0	; 成功基準値
.SUCCESS_LINE2	=0	; 成功基準値
.SUCCESS_FLAG	=0	; 成功フラグ

.FLAG_ALLOPEN=0

.A_TEXT_HDL=6		;アニメ中テキストハンドル

.SLCANM
.TIMELOP
.TIMELOPMAX
.TIMEWAIT1
.GIRX
.GIRY
.ALOCX[13]
.ALOCY[13]
.ALOCC[13]
.ALOCF[13]
.ALOCCNT[13]
.AFWORK=0
.AFWORKCNT=0
.AFMISS=0
.AFMISSCNT=0
.TITLES="夜の殿堂"

.MODE_TURN=0
.COUNT_TURN=0

.FLAG_DANCE=0
.SLCANM_OLD=999

ANIME_INIT

S_STARTDAY	= SCH_STARTDAY[SCH_NOW]		; スケジュール開始日
S_ENDDAY	= SCH_ENDDAY[SCH_NOW]		; スケジュール終了日

SCH_NOW++		; スケジュール実行中項目

R_PROSTITUTION	; 14=夜の殿堂

LOAD("RUNNING")


;***************************************
;
;		夜の殿堂
;
;***************************************

*R_PROSTITUTION	; 14=夜の殿堂

TXOPEN(1)
TXA(NAME_FIRST)は今日から，
夜の殿堂でアルバイトです．
@P
TXCLOSE(1)

TXOPEN(2)
TXFACE("F073")

GUARA_BASE	=35						; 基本給
GUARA_ALL	=0						; バイト料合計
WORK_DAYS	=0						; 仕事日数
SUCCESS_DAYS=0						; 成功日数

CK_GUARA(RUN_ARBEIT[15],GUARA_BASE)	; バイト料
FLAG_UP		= AX					; 待遇アップ
GUARA_ONE	= DX					; バイト料

支配人テレマーク男爵

IF ( S_HIKOUKA >= 60 )
	「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊」
	@P
	TXCLOSE(2)	
	TXOPEN(1)
	TXA(NAME_FIRST)はアルバイトを断られてしまった・・・
	@P
	TXCLOSE(1)

	DAY_COUNTER	= S_ENDDAY - S_STARTDAY 	; 日付カウンタ
		TIMER1(10)
		WAIT1
		CLENDER(3)					; カレンダー・更新処理
		CLENDER(2)					; カレンダー・再表示
	LOOP DAY_COUNTER
	RET

RUN_ARBEIT[31]++		;「夜の殿堂」訪問回数

IF ( GRA_ARBEIT[15] = FLAG_UP )		; 待遇

	IF ( RUN_ARBEIT[31]=1 )		;１回目
		「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊」
		@P
		@C
		「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊」

	IF ( RUN_ARBEIT[31]>1 )		;２回目以降
		「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊」

IF ( GRA_ARBEIT[15] ! FLAG_UP )		; 待遇

	GRA_ARBEIT[15] = FLAG_UP		; 待遇

	IF ( FLAG_UP = 1 )				; 待遇アップ１回目
		「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊TXGOLD(GUARA_ONE)＊＊＊＊＊＊＊＊＊＊＊」

	IF ( FLAG_UP ! 1 )				; 待遇アップ２回目以降
		「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊１日TXGOLD(GUARA_ONE)＊＊＊＊＊＊」
@P
TXCLOSE(2)

IF ( GRA_ARBEIT[15]>=1 ) 			;「夜の殿堂」待遇
	FLAG_DANCE=1

ALL_OPEN
DAY_COUNTER	= S_ENDDAY - S_STARTDAY + 1	; 日付カウンタ

	TXF(11)

	IF ( VAL_WEEK!0 )					; Sunday

		B_IROKE		+=	3				; 色気
		B_INGYO++						; 因業

		B_KIHIN		-=	2				; 気品
		IF ( B_KIHIN < 0 )	B_KIHIN=0	; 気品

		B_CHINOH--						; 知能
		IF ( B_CHINOH < 0 ) B_CHINOH=0

		RANDAM(2) AX--
		T_KIDATE -= AX					; 気だて
		IF ( T_KIDATE < 0 ) T_KIDATE=0

		B_STRESS	+=	8				; ストレス

		CLENDER(13)	;訓練技能値計算

		WORK_DAYS++						; 仕事日数
		TXCLR TXA(TITLES)・TXPOINT(WORK_DAYS)日目

		IRAND999X(B_STRESS)				; ストレス
		SUCCESS_LINE= B_IROKE - IRND	; 色気

		IRAND999X(B_STRESS)				; ストレス
		SUCCESS_LINE2= V_GEIJYUTSU - IRND ; 芸術

		CHK_RENAI
		CHK_HIKOUKA

		IF ( SUCCESS_LINE >= 70 SUCCESS_LINE2 >= 30 )	; 色気７０芸術３０成功
			今日はうまく仕事をやりとげた．
			SUCCESS_DAYS++				; 成功日数
			GUARA_ALL += GUARA_ONE		; バイト料合計
			GXXDGOLD
			SUCCESS_FLAG = 1			; 成功フラグ
			ANIME_WIDW					;

		IF ( SUCCESS_LINE < 70 )( SUCCESS_LINE2 < 30 )	; 色気７０芸術３０失敗
			IF ( S_HIKOUKA < 10 )
				今日の仕事は不調に終った・・・
			IF ( S_HIKOUKA >= 10 )
				TXA(NAME_FIRST)は仕事をサボっている・・・
			SUCCESS_FLAG = 0			; 成功フラグ
			ANIME_WIDW					;

		GXXD(0,B_IROKE)					; 色気
		GXXD(1,B_INGYO)					; 因業
		GXXD(2,B_KIHIN)					; 気品
		GXXD(3,B_CHINOH)				; 知能
		GXXD(4,V_KIDATE)				; 気だて
		GXXD(5,B_STRESS)				; ストレス

	IF ( VAL_WEEK=0 )				; Sunday
		@C
		今日は日曜日です．
		ANMTSUNDAY

	TXF(10)

	BORTH_CHECK

	IF ( DAY_COUNTER ! 1 )
		CLENDER(3)					; カレンダー・更新処理
		CLENDER(2)					; カレンダー・再表示
LOOP DAY_COUNTER
ALL_CLOSE

RUN_ARBEIT[0]++					;「娘を働かせる」実行回数
IF ( SUCCESS_DAYS>0 )			; 成功日数
	RUN_ARBEIT[15]++			;「夜の殿堂」実行回数

TXOPEN(2)
TXFACE("F073")

IF ( SUCCESS_DAYS = WORK_DAYS )		; バイト終了時（パーフェクト）
	P1X100(GUARA_ALL,50)
	GUARA_ALL += AX
	「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊TXPOINT(SUCCESS_DAYS)＊＊TXGOLD(GUARA_ALL)＊＊＊＊＊＊＊＊＊＊＊＊」
	GOLDADD(GUARA_ALL)			; バイト料合計

IF ( SUCCESS_DAYS < WORK_DAYS   SUCCESS_DAYS > 0 );（失敗があった場合）
	「＊＊＊＊＊＊＊＊＊TXPOINT(SUCCESS_DAYS)＊＊＊TXGOLD(GUARA_ALL)＊＊＊＊＊＊＊＊＊」
	GOLDADD(GUARA_ALL)			; バイト料合計

IF ( SUCCESS_DAYS = 0 )			; バイト終了時（全滅）
	「＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊」
WWPROF(3)					; ﾌﾟﾛﾌｨｰﾙ･ｳｲﾝﾄﾞｳ・所持金
@P
TXCLOSE(2)

RET

*ALL_OPEN
ANIME_OPEN
STRSCLEAR
GG_STR[0]="色気"
GG_VAL[0]=B_IROKE
GG_STR[1]="因業"
GG_VAL[1]=B_INGYO
GG_STR[2]="気品"
GG_VAL[2]=B_KIHIN
GG_STR[3]="知能"
GG_VAL[3]=B_CHINOH
GG_STR[4]="気だて"
GG_VAL[4]=V_KIDATE
GG_STR[5]="ストレス"
GG_VAL[5]=B_STRESS
GG_MAX=6
GXXSTART
FLAG_ALLOPEN=1
RET

*ALL_CLOSE
IF ( FLAG_ALLOPEN=1 )
	FLAG_ALLOPEN=0
	GR_CLOSE						; ﾊﾟﾗﾒｰﾀ･ｳｲﾝﾄﾞｳ CLOSE
	ANIME_CLOSE
RET

; ******************
;	lib.
; ******************

*GXXSTART
;PTBK(17)			; パーツバンク設定
;PTCLR				; パーツバッファクリア
;PTGT(4,140,20,35)	; パーツ座標ＰＵＴ
GR_F(1,23)			; ﾊﾟﾗﾒｰﾀ･ｳｲﾝﾄﾞｳ OPEN  PROCWRK_TOP #23 52,200byte
C3 = 0
C2 = 0
IGRP_X=4
IGRP_Y=340
IGRP_CNT=0
C1 = GG_MAX
	IGRP_TBL1[IGRP_CNT]=GG_STR[C2]
	IGRP_TBL3[IGRP_CNT]=GG_VAL[C2]
	IGRP_CNT++ C2++
	IF ( IGRP_CNT = 2 )
		C3++ GRPOPEN(1,C3)		; ﾊﾟﾗﾒｰﾀ･ｳｲﾝﾄﾞｳ
		IGRP_CNT = 0
		IGRP_X += 24
LOOP C1
IF ( IGRP_CNT ! 0 )
	C3++ GRPOPEN(1,C3)		; ﾊﾟﾗﾒｰﾀ･ｳｲﾝﾄﾞｳ
IGRP_TBL1[0]="もうけ"
IGRP_TBL3[0]=0
IGRP_CNT=1
IGRP_X=4
IGRP_Y=140
C3++ GOLDOPEN(1,C3)			; ﾊﾟﾗﾒｰﾀ 所持金ｳｲﾝﾄﾞｳ
GG_GOLD_HDL=C3
RET

*GXXD
C3 = AX
C4 = BX
MOD( C3, 2 )	C5 = AX		; 余り
C6 = C3 / 2 + 1				; handle.
GRPUPD(C6,C5,C4)			;
RET

*GXXDGOLD
GOLDUPD(GG_GOLD_HDL,0,GUARA_ALL)
RET

; ******************
;	Txxx
; ******************

*ANIME_INIT
TIMEWAIT1=8		;8;6
TIMELOPMAX=5	;5;12

;仕事中１
ALOCX[0]	=280/8
ALOCY[0]	=113-79
ALOCC[0]	=0
ALOCCNT[0]	=2
.FILM0[2]

;仕事ミス・病気１
ALOCX[2]	=ALOCX[0]
ALOCY[2]	=ALOCY[0]
ALOCC[2]	=0
ALOCCNT[2]	=15
.FILM2[15]=5,6,7,8,9, 10,11,12,13,14, 15,16,17,18,18

;サボリ
ALOCX[4]	=280/8
ALOCY[4]	=113-79
ALOCC[4]	=0
ALOCCNT[4]	=2
.FILM4[2]=19,20

;テレマーク
ALOCX[5]	=40/8
ALOCY[5]	=113-79
ALOCC[5]	=0
ALOCCNT[5]	=30
.FILM5[30]=41,42,41,42,41, 42,41,42,41,42, 41,42,41,42,41, 42,41,42,41,42, 39,40, 39,40, 39,40, 39,40, 39,40

;客１(女連れ)
ALOCX[6]	=280/8
ALOCY[6]	=113-79
ALOCC[6]	=0
ALOCCNT[6]	=9
.FILM6[9]=43,43,43,43,43, 43,43,44,44
;客２(酒飲み)
ALOCX[7]	=0/8
ALOCY[7]	=113-79
ALOCC[7]	=0
ALOCCNT[7]	=12
.FILM7[12]=45,45,45, 45,45,45,   46,46,46, 46,46,46

;ダンサー１
ALOCX[8]	=104/8
ALOCY[8]	=106-79
ALOCC[8]	=0
ALOCCNT[8]	=20
.FILM8[20]= 31,32,33,34, 31,32,33,34,  31,32,31,32,31,32,31,32, 33,34,33,34
;ダンサー２
ALOCX[9]	=160/8
ALOCY[9]	=106-79
ALOCC[9]	=0
ALOCCNT[9]	=20
.FILM9[20]= 35,36,37,38, 35,36,37,38,  35,36,35,36,35,36,35,36, 37,38,37,38

;仕事中ダンス
ALOCX[10]	=136/8
ALOCY[10]	=106-79
ALOCC[10]	=0
ALOCCNT[10]	=20
.FILM10[20]= 21,22,23,24, 21,22,23,24, 21,22,21,22,21,22,21,22, 23,24,23,24

;仕事ダンスミス・病気１
ALOCX[11]	=ALOCX[10]
ALOCY[11]	=ALOCY[10]
ALOCC[11]	=0
ALOCCNT[11]	=10
.FILM11[10]=24,25,26,27, 28,28,28, 28,28,28

;サボリ
ALOCX[12]	=136/8
ALOCY[12]	=106-79
ALOCC[12]	=0
ALOCCNT[12]	=2
.FILM12[2]=29,30

WORKS1_RIGHT
RET

*WORKS1_RIGHT
ALOCC[0]=0
ALOCCNT[0]=2
FILM0[0]=1
FILM0[1]=2
ALOCF[0] = 0
RET

*WORKS1_LEFT
ALOCC[0]=0
ALOCCNT[0]=2
FILM0[0]=3
FILM0[1]=4
ALOCF[0] = 1
RET

*WORKS1_TURN
ALOCC[0]=0
ALOCCNT[0]=4
FILM0[0]=5
FILM0[1]=6
FILM0[2]=7
FILM0[3]=8
RET


*ANIME_OPEN
WWANIME(1,0)			; anime window open.
WWANIME(3,0,"J015B")	; pictuer load.
WWANIME(6,0,"J015A")	; anime pattern add load.
WWANIME(4,0)			; put BG.
WWANIME(5,0)			; pictuer copy vvram -> CRT.
TXOPEN(A_TEXT_HDL)
RET

*ANIME_CLOSE
WWANIME(2,0)		: anime window close.
TXCLOSE(A_TEXT_HDL)
RET

*ANIME_WIDW
IF ( SUCCESS_FLAG ! 0 )		; 成功フラグ
	ANMT001(0)				; 0=仕事中１
	GOTO ANIME_WIDW_SHOW
IF ( S_HIKOUKA >= 10 )		; 失敗時（非行化指数１０以上）
	ANMT001(4)				; 4=サボリ
	GOTO ANIME_WIDW_SHOW
ANMT001(2)					; 2=仕事ミス１
*ANIME_WIDW_SHOW
RET


*ANMT001
; AX :	0=仕事中１,1=仕事中２,2=仕事ミス１,3=仕事ミス２,4=サボリ
SLCANM = AX

IF ( FLAG_DANCE ! 0 )
	ALOCX[8]=96/8			;ダンサー１
	ALOCX[9]=176/8			;ダンサー２

IF ( SLCANM=2  SLCANM_OLD!2 )
	ALOCC[2]	=0
	ALOCC[11]	=0

TIMELOP=TIMELOPMAX
	WWANIME(4,0)		; put BG.
	TIMER1(TIMEWAIT1)

	ALOCC[10] = ALOCC[8]

	ANIM_NUM(8)		APUT(ALOCX[8],ALOCY[8],DX)		ALOCC[8]++	;ﾀﾞﾝｻｰ
	ANIM_NUM(9)		APUT(ALOCX[9],ALOCY[9],DX)		ALOCC[9]++	;
	ANIM_NUM(6)		APUT(ALOCX[6],ALOCY[6],DX)		ALOCC[6]++	;客
	ANIM_NUM(7)		APUT(ALOCX[7],ALOCY[7],DX)		ALOCC[7]++	;
	ANIM_NUM(5)		APUT(ALOCX[5],ALOCY[5],DX)		ALOCC[5]++	;ﾃﾚﾏｰｸ


	IF ( FLAG_DANCE ! 0 )
		IF ( SLCANM = 0 )
			ANIM_NUM(10)	APUT(ALOCX[10],ALOCY[10],DX)	ALOCC[10]++
		IF ( SLCANM = 2 )
			ANIM_NUM(11)	APUT(ALOCX[11],ALOCY[11],DX)	ALOCC[11]++
		IF ( SLCANM = 4 )
			ANIM_NUM(12)	APUT(ALOCX[12],ALOCY[12],DX)	ALOCC[12]++

	IF ( FLAG_DANCE = 0 )
		ANIM_NUM(SLCANM)	APUT(ALOCX[SLCANM],ALOCY[SLCANM],DX)	ALOCC[SLCANM]++
		IF ( MODE_TURN ! 0 )			;ターン中
			IF ( ALOCC[0]>= 4 )			;
				MODE_TURN = 0			;ターン中
				IF ( COUNT_TURN >= 2 )
					COUNT_TURN = 0
				IF ( ALOCX[0]>=29)
					WORKS1_LEFT
				IF ( ALOCX[0]<=1 )		;8/8
					WORKS1_RIGHT
		IF ( SLCANM = 0  MODE_TURN=0 )			;0=仕事中１
			IF ( ALOCF[0] = 0 )
				IF ( ALOCX[0]>=35 )
					WORKS1_TURN
					MODE_TURN=1			;ターン中
					COUNT_TURN++
				IF ( ALOCX[0]<35 )
					ALOCX[0]++
					ALOCX[2]++
			IF ( ALOCF[0] = 1 )
				IF ( ALOCX[0]<=1 )		;8/8
					WORKS1_TURN
					MODE_TURN=1			;ターン中
					COUNT_TURN++
				IF ( ALOCX[0]>1 )		;8/8
					ALOCX[0]--
					ALOCX[2]--


	WAIT1
	WWANIME(5,0)		; pictuer copy vvram -> CRT.
LOOP TIMELOP
SLCANM_OLD = SLCANM
RET

*ANMTSUNDAY
TIMELOP=TIMELOPMAX
	WWANIME(4,0)		; put BG.
	TIMER1(TIMEWAIT1)
	WAIT1
	WWANIME(5,0)		; pictuer copy vvram -> CRT.
LOOP TIMELOP
RET

*ANIM_NUM
;ANIM_NUM(filmnumber)
;-O- DX pattern number.
IF ( ALOCC[AX] >= ALOCCNT[AX] )
	ALOCC[AX] = 0
BX = ALOCC[AX]
IF (AX=0) DX=FILM0[BX]
IF (AX=2) DX=FILM2[BX]
IF (AX=4) DX=FILM4[BX]
IF (AX=5) DX=FILM5[BX]
IF (AX=6) DX=FILM6[BX]
IF (AX=7) DX=FILM7[BX]
IF (AX=8) DX=FILM8[BX]
IF (AX=9) DX=FILM9[BX]
IF (AX=10) DX=FILM10[BX]
IF (AX=11) DX=FILM11[BX]
IF (AX=12) DX=FILM12[BX]
DX--	; DX pattern number.
RET

*APUT
; anime pattern put vvram.
; APUT(x,y,pattern)
IF ( CX < 0 ) RET
GIRX=AX
GIRY=BX
SI = CX * 2 + 1
DX = BX
CX = AX
AX = 7
BX = 0
;	WWANIME(7,0,ALOCX[0],ALOCY[0],ALOCC[0])
WWANIME	; anime pattern put vvram.
RET


;************************************
;	誕生日チェック
;************************************

*BORTH_CHECK

IF ( P_BORTHMONTH = VAL_MONTH  P_BORTHDAY = VAL_DAY )			; 娘の誕生日
	IF ( P_BORTHMONTH[1] = VAL_MONTH  P_BORTHDAY[1] = VAL_DAY )	; 父の誕生日
		E_ETC[14]=P_NENREI[1]			;「父の誕生日」をチェックした年齢
		IF ( URA_FATHER >=60 )			;父との関係値が６０以上
			ALL_CLOSE
			EVE4243						;娘の誕生日と父の誕生日の合体
			IF ( DAY_COUNTER ! 1 )
				ALL_OPEN
			RET

IF ( P_BORTHMONTH = VAL_MONTH )			; 誕生月
	IF ( P_BORTHDAY = VAL_DAY )			; 誕生日
		ALL_CLOSE
		EVENT042						; 42 娘の誕生日
		IF ( DAY_COUNTER ! 1 )
			ALL_OPEN
		RET

IF ( P_BORTHMONTH[1] = VAL_MONTH )		; 父の誕生月
	IF ( P_BORTHDAY[1] = VAL_DAY )		; 父の誕生日
		E_ETC[14]=P_NENREI[1]			;「父の誕生日」をチェックした年齢
		IF ( URA_FATHER >=60 )			;父との関係値が６０以上
			ALL_CLOSE
			EVENT043					; 43 父の誕生日
			IF ( DAY_COUNTER ! 1 )
				ALL_OPEN
			RET
RET

*CHK_RENAI
IF ( FLAG_RENAI!0 )		;状態・恋愛
	RANDAM(100)			;２０％の確率
	IF ( IRND<=20 )
		SUCCESS_LINE=0
RET

*CHK_HIKOUKA
IF ( S_HIKOUKA >= 10 S_HIKOUKA < 30 )	;状態・やや反抗的
	RANDAM(100)							;４０％の確率
	IF ( IRND<=40 )
		SUCCESS_LINE=0
	RET

IF ( S_HIKOUKA >= 30 )			;状態・反抗的
	RANDAM(100)					;８０％の確率
	IF ( IRND<=80 )
		SUCCESS_LINE=0
	RET
RET
;
;	end of "JOB014.TXT"
;
